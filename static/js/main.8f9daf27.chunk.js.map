{"version":3,"sources":["redux/content-reducer.js","components/Component.module.css","redux/selectors.js","components/Content.module.css","components/Component.js","components/Content.js","App.js","serviceWorker.js","redux/store.js","index.js"],"names":["initialState","content","type","props","width","height","visible","caption","source","newValue","error","contentReducer","state","action","payload","err","addSource","setNewValue","addContent","showError","module","exports","contentSelector","contentStore","sourceSelector","newValueSelector","errorSelector","Component","handlerChangeRoute","event","target","value","handlerChangeValue","apply","val","length","eval","Boolean","arrName","split","slice","join","elemName","arrContent","map","item","undefined","push","className","cls","component","header","header__item","htmlFor","id","onChange","onClick","mapStateToProps","connect","Content","renderContent","index","styles","content__panel","style","key","content__label","content__button","content__wrapper","App","window","location","hostname","match","rootReducer","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.8f9daf27.chunk.js","sourcesContent":["const initialState = {\r\n  content: [\r\n    {\r\n      type: \"panel\",\r\n      props: {\r\n        width: 500,\r\n        height: 200,\r\n        visible: true,\r\n      },\r\n      content: [\r\n        {\r\n          type: \"panel\",\r\n          props: {\r\n            width: 200,\r\n            height: 100,\r\n            visible: true,\r\n          },\r\n        },\r\n        {\r\n          type: \"button\",\r\n          props: {\r\n            caption: \"button\",\r\n            width: 100,\r\n            height: 50,\r\n            visible: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      type: \"label\",\r\n      props: {\r\n        caption: \"test\",\r\n        visible: true,\r\n      },\r\n    },\r\n    {\r\n      type: \"button\",\r\n      props: {\r\n        caption: \"button\",\r\n        width: 100,\r\n        height: 50,\r\n        visible: true,\r\n      },\r\n    },\r\n  ],\r\n  source: \"\",\r\n  newValue: '',\r\n  error: false,\r\n};\r\n\r\nconst contentReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"ADD-SOURCE\":\r\n      return {\r\n        ...state,\r\n        source: action.payload,\r\n      };\r\n    case \"SET-NEW-VALUE\":\r\n      return {\r\n        ...state,\r\n        newValue: action.payload,\r\n      };\r\n    case \"ADD-NEW-ELEM-TO-CONTENT\":\r\n      return {\r\n        ...state,\r\n        content: [...action.payload],\r\n      };\r\n    case \"THROW-ERROR\":\r\n      return {\r\n        ...state,\r\n        error: action.err,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default contentReducer;\r\n\r\n// action creators для изменения state\r\nexport const addSource = (payload) => ({\r\n  type: \"ADD-SOURCE\",\r\n  payload,\r\n});\r\n\r\nexport const setNewValue = (payload) => ({\r\n  type: \"SET-NEW-VALUE\",\r\n  payload,\r\n});\r\n\r\nexport const addContent = (payload) => ({\r\n  type: \"ADD-NEW-ELEM-TO-CONTENT\",\r\n  payload,\r\n});\r\n\r\nexport const showError = (err) => ({\r\n  type: \"THROW-ERROR\",\r\n  err,\r\n});\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"Component_component__1W2Gg\",\"header\":\"Component_header__QA5GS\",\"header__item\":\"Component_header__item__F_ZJr\",\"content\":\"Component_content__2YzO0\",\"error\":\"Component_error__DASXM\"};","export const contentSelector = (state) => state.contentStore.content;\r\nexport const sourceSelector = (state) => state.contentStore.source;\r\nexport const newValueSelector = (state) => state.contentStore.newValue;\r\nexport const errorSelector = (state) => state.contentStore.error;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content__wrapper\":\"Content_content__wrapper__3dR7p\",\"content__panel\":\"Content_content__panel__gbgUA\",\"content__label\":\"Content_content__label__3mUNr\",\"content__button\":\"Content_content__button__2WgQk\"};","import React from \"react\";\r\nimport cls from \"./Component.module.css\";\r\nimport {\r\n  contentSelector,\r\n  sourceSelector,\r\n  newValueSelector,\r\n  errorSelector,\r\n} from \"../redux/selectors\";\r\nimport {\r\n  addSource,\r\n  setNewValue,\r\n  addContent,\r\n  showError,\r\n} from \"../redux/content-reducer\";\r\nimport { connect } from \"react-redux\";\r\nimport Content from \"./Content\";\r\n\r\nconst Component = ({\r\n  content,\r\n  source,\r\n  newValue,\r\n  error,\r\n  addSource,\r\n  setNewValue,\r\n  addContent,\r\n  showError,\r\n}) => {\r\n  //обработчик пути\r\n  const handlerChangeRoute = (event) => {\r\n    addSource(event.target.value);\r\n  };\r\n\r\n  //обработчик нового значения\r\n  const handlerChangeValue = (event) => {\r\n    setNewValue(event.target.value);\r\n  };\r\n\r\n  // {type: \"label\",props: {caption: \"testing\", visible: true, },}\r\n\r\n  //обработчик кнопки применить\r\n  const apply = () => {\r\n    try {\r\n      let val;\r\n\r\n      // проверить новое значение на обьект\r\n      if (newValue[0] === \"{\" && newValue[newValue.length - 1] === \"}\") {\r\n        val = eval(\"(\" + newValue + \")\");\r\n      }\r\n      \r\n\r\n      if (typeof eval(source) == \"number\") val = +newValue;\r\n      if (typeof eval(source) == \"boolean\") val = Boolean(eval(newValue));\r\n      if (typeof eval(source) == \"string\") val = newValue;\r\n\r\n      const arrName = source.split(\".\").slice(0, 1).join();\r\n      const elemName = source.split(\".\").slice(1).join(\".\");\r\n      const arrContent = content.map((item) => {\r\n\r\n        if (item === eval(arrName) && elemName) {\r\n          eval(\"item.\" + elemName + \"=val\");\r\n          return item;\r\n        }\r\n\r\n        if (item === eval(arrName) && !elemName) {\r\n          eval(\"item = val\");\r\n          return item;\r\n        } else return item;\r\n      });\r\n\r\n      if (eval(arrName) === undefined) {\r\n        arrContent.push(eval(\"(\" + newValue + \")\"))\r\n        }\r\n      \r\n      addContent(arrContent);\r\n    } catch {\r\n      showError(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={cls.component}>\r\n      <header className={cls.header}>\r\n        <div className={cls.header__item}>\r\n          <label htmlFor=\"route\">Путь</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"route\"\r\n            value={source}\r\n            onChange={handlerChangeRoute}\r\n          />\r\n        </div>\r\n        <div className={cls.header__item}>\r\n          <label htmlFor=\"newValue\">Новое значение</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"newValue\"\r\n            value={newValue}\r\n            onChange={handlerChangeValue}\r\n          />\r\n        </div>\r\n        <button onClick={apply}>Применить</button>\r\n        {error ? <span className={cls.error}>Ошибка ввода поля \"Путь\" или поля \"Новое значение\"</span> : null}\r\n      </header>\r\n      <div className={cls.content}>\r\n        <Content content={content} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  content: contentSelector(state),\r\n  source: sourceSelector(state),\r\n  newValue: newValueSelector(state),\r\n  error: errorSelector(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  addSource,\r\n  setNewValue,\r\n  addContent,\r\n  showError,\r\n})(Component);\r\n","import React from \"react\";\r\nimport cls from \"./Content.module.css\";\r\n\r\nfunction Content({ content }) {\r\n  const renderContent = content.map((item, index) => {\r\n    if (!item || !item.props) return null;\r\n\r\n    const styles = {\r\n      width: item.props.width,\r\n      height: item.props.height,\r\n    };\r\n\r\n    if (item.type === \"panel\" && item.props.visible) {\r\n      return (\r\n        <div className={cls.content__panel} style={styles} key={item.type+index}>\r\n          {item.content && item.content.length ? (\r\n            <Content content={item.content} />\r\n          ) : null}\r\n        </div>\r\n      );\r\n    }\r\n    if (item.type === \"label\" && item.props.visible) {\r\n      return (\r\n        <span className={cls.content__label} key={item.type+index}>\r\n          {item.props.caption}\r\n        </span>\r\n      );\r\n    }\r\n    if (item.type === \"button\" && item.props.visible) {\r\n      return (\r\n        <button className={cls.content__button} style={styles} key={item.type+index}>\r\n          {item.props.caption}\r\n        </button>\r\n      );\r\n    }\r\n  });\r\n  return <div className={cls.content__wrapper}>{renderContent}</div>;\r\n}\r\n\r\nexport default Content;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Component from \"./components/Component\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"app-container\">\r\n        <Component />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { createStore, combineReducers } from \"redux\";\r\nimport contentReducer from \"./content-reducer\";\r\n\r\n//объедидение reducer`ов\r\nlet rootReducer = combineReducers({\r\n  contentStore: contentReducer,\r\n});\r\n\r\nconst store = createStore(rootReducer);\r\n//создаем store из reducera\r\n\r\nexport default store;\r\n\r\nwindow.store = store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport store from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}